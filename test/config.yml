# scheme can be internet-facing, internal
# protocol can be http, https, tcp
# duration can be seconds, minutes, hours, days
ELB:
  LoadBalance:
    name: jameson-elb
    scheme: internet-facing
    vpc: 233
    subnetId:
    - sg-5a391333
    - sg-5a391334
  TargetGroup:
  - name: jameson-80
    port: 80
    protocol: http
    vpc: 233
    stickiness:
      value: true
      duration: 2 hours
  - name: jameson-8080
    port: 8080
    protocol: https
    vpc: 233
    stickiness:
      value: false
Repositories:
- name: inno/test
  tag: 0.3
- name: inno/hello
  tag: 0.2
# hardMemory: container will be killed if exceed
# softMemory: memory reservation
# if set both, hard limit must be greater than soft limit
# portMapping: host port:container port
TaskDef:
- name: sean-taskdef
  taskRole: ecs-task-role
  container:
  - name: sean-container1
    image: 066703160259.dkr.ecr.us-east-2.amazonaws.com/inno/test:0.3
    hardMemory: 300
    softMemory: 200
    portMappings:
    - 80:80
  - name: sean-container2
    image: 066703160259.dkr.ecr.us-east-2.amazonaws.com/inno/test:0.2
    hardMemory: 300
    softMemory: 200
    portMappings:
    - 8080:8080
Cluster:
  name: jameson-cluster
  ProvisioningModel: onDemand
  ec2type: t2.micro
  numberOfInstance: 2
  EBS: 22
  keyPair: jameson-keypair
  vpc: 233
  subnetId:
  - subnet-98a3d7f1
  - subnet-67c77a1c
  securityGroup: sg-5a391333
Service:
  name: sean-sdk-service
  cluster: sean-sdk-cluster
  taskdef: sean-taskdef:1
  desiredCount: 2
  maximumPercent: 200
  minimumHealthyPercent: 50
  role: ecsServiceRole1
  placementStrategy:
  - type: spread
    field: instanceId
  placementConstraints:
  - type: distinctInstance
  loadBalancers:
  - targetGroupArn: arn:aws:elasticloadbalancing:us-east-2:066703160259:targetgroup/sean-target/165367c2a5e53b67
    loadBalancerName: sean-elb-ecs
    containerName: sean-container1
    containerPort: 80